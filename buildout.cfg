[buildout]
extends =
    https://raw.githubusercontent.com/collective/buildout.plonetest/master/test-4.x.cfg
    http://dist.plone.org/release/4.3.15/versions.cfg
    https://raw.githubusercontent.com/plone/plone.app.robotframework/master/versions.cfg
    https://raw.githubusercontent.com/IMIO/buildout.website/4.3.15.x/versions-base.cfg
    https://raw.githubusercontent.com/IMIO/buildout.website/4.3.15.x/sources.cfg
    https://raw.githubusercontent.com/IMIO/buildout.jenkins/master/qa.cfg

package-name = cpskin.minisite
#allow-picked-versions = false
show-picked-versions = true

index = http://devpi.imio.be/root/imio/+simple/
allow-hosts +=
    devpi.imio.be

versions = versions

extensions =
    mr.developer

auto-checkout =

parts +=
#    nginx
#    proxy
    omelette
    test
    robot

[instance]
eggs += plone.app.contenttypes


[omelette]
recipe = collective.recipe.omelette
eggs = ${test:eggs}

[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    cpskin.minisite [test]
environment = testenv

[testenv]
zope_i18n_compile_mo_files = true


[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework

[code-analysis]
directory = ${buildout:directory}/cpskin


[sources]
robotframework-selenium2library = git https://github.com/affinitic/robotframework-selenium2library.git

[versions]
cpskin.minisite =

plone.app.robotframework = 1.1
robotframework = 3.0.3
robotframework-selenium2library = 3.0.0
robotframework-selenium2screenshots = 0.8.1
robotsuite = 2.0.0
selenium = 3.11.0
sphinxcontrib-robotframework = 0.5.1

[nginx]
#nginx needs "sudo apt-get install libpcre3 libpcre3-dev"
recipe = zc.recipe.cmmi
url = http://nginx.org/download/nginx-1.1.14.tar.gz
md5sum = 16d523e395778ef35b49a2fa6ad18af0

[proxy]
recipe = gocept.nginx
configuration =
    worker_processes 1;
    events {
        worker_connections 1024;
    }
    http {

        server {
            listen 127.0.0.1:8000;

            location / {
                rewrite ^/(.*)$ /VirtualHostBase/$scheme/$host:$server_port/Plone/VirtualHostRoot/$1 break;
                proxy_pass http://localhost:8080/Plone;
                proxy_set_header Host $http_host;
                proxy_redirect default;
            }
        }
        server {
            listen 127.0.0.2:8000;

            location / {
                rewrite ^/(.*)$ /VirtualHostBase/$scheme/$host:$server_port/Plone/minisite1/VirtualHostRoot/$1 break;
                proxy_pass http://localhost:8080/Plone;
                proxy_set_header Host $http_host;
                proxy_redirect default;
            }
        }

    }
